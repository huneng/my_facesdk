/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_visionenergy_mycamera_FaceUtil */

#ifndef _Included_com_visionenergy_mycamera_FaceUtil
#define _Included_com_visionenergy_mycamera_FaceUtil
#ifdef __cplusplus
extern "C" {
#endif


JNIEXPORT jint JNICALL Java_com_visionenergy_mycamera_FaceUtil_initialSDK(JNIEnv*env, jobject thiz, jobject context);


/*
 * Class:     com_visionenergy_mycamera_FaceUtil
 * Method:    loadTracker
 * Signature: (Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_visionenergy_mycamera_FaceUtil_loadTracker
  (JNIEnv *, jobject, jstring, jstring, jstring);

/*
 * Class:     com_visionenergy_mycamera_FaceUtil
 * Method:    trackFace
 * Signature: ([III[F)I
 */
JNIEXPORT jint JNICALL Java_com_visionenergy_mycamera_FaceUtil_trackFace
  (JNIEnv *, jobject, jbyteArray, jint, jint, jfloatArray, int direct);

JNIEXPORT jint JNICALL Java_com_visionenergy_mycamera_FaceUtil_alignFace
        (JNIEnv *env, jobject, jbyteArray yuv, jint w, jint h, jfloatArray pts, jint format, int maxFaceSize);

JNIEXPORT jint JNICALL Java_com_visionenergy_mycamera_FaceUtil_alignFaceBitmap
    (JNIEnv *env, jobject obj, jobject img,  jfloatArray pts, int maxFaceSize);

JNIEXPORT jint JNICALL Java_com_visionenergy_mycamera_FaceUtil_getAngles
        (JNIEnv *env, jobject, jfloatArray, jint, jint, jfloatArray);

JNIEXPORT jint JNICALL Java_com_visionenergy_mycamera_FaceUtil_releaseTracker
        (JNIEnv *env, jobject);

#ifdef __cplusplus
}
#endif

#endif
